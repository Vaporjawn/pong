name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: |
          ## Changes in ${{ github.ref_name }}

          * See the [CHANGELOG.md](CHANGELOG.md) for detailed changes
          * Download the appropriate binary for your platform below

          ## Installation

          1. Download the binary for your operating system
          2. Make it executable (Unix systems): `chmod +x pong`
          3. Run: `./pong`

          ## System Requirements

          - **Linux**: libasound2, libudev, libxkbcommon
          - **Windows**: Windows 10 or later
          - **macOS**: macOS 10.14 or later

  build-release:
    name: Build Release
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: pong
            asset_name: pong-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: pong.exe
            asset_name: pong-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: pong
            asset_name: pong-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: pong
            asset_name: pong-macos-aarch64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libudev-dev libxkbcommon-dev

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Prepare binary (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        strip ${{ matrix.binary_name }}
        chmod +x ${{ matrix.binary_name }}

    - name: Upload release binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: target/${{ matrix.target }}/release/${{ matrix.binary_name }}
        asset_name: ${{ matrix.asset_name }}
        asset_content_type: application/octet-stream

  publish-crate:
    name: Publish to crates.io
    needs: build-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libudev-dev libxkbcommon-dev

    - name: Publish to crates.io
      run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
      continue-on-error: true  # Don't fail if already published